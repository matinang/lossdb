% Generated by roxygen2 (4.0.2): do not edit by hand
\name{loss_df}
\alias{loss_df}
\title{loss_df S3 class constructor}
\usage{
loss_df(ldf, origin, dev, id = NULL, evaluation_date = NULL, paid = NULL,
  incurred = NULL, paid_recovery = NULL, incurred_recovery = NULL,
  desc = NULL)
}
\arguments{
\item{origin}{time period in which the claim originated}

\item{dev}{development stage of claim at relevant 'evaluation_date'}

\item{id}{optional identification key of claim}

\item{evaluation_date}{optional column naming the evaluation dates}

\item{paid}{vector of all paid loss columns}

\item{incurred}{vector of all incurred loss columns}

\item{paid_recovery}{vector of all paid recovery columns}

\item{incurred_recovery}{vector of all incurred recovery columns}

\item{desc}{vector of all additional columns relevant to the analysis. Common examples are
  'open claims', and 'reported claims' (when claims are evaluated on an occurence basis)}

\item{df}{a data frame containing the raw data of losses by claim}
}
\description{
\code{loss_df} is the primary S3 data class for the \code{lossdb}
package.  A \code{loss_df} is a data frame for claims loss
information of a non life insurance line of business.  The data frame
is structured on a claim or occurence basis (i.e. each row represents 1 claim
or 1 claim occurence) evaluated at a specific time.
}
\details{
\code{loss_df} is designed to assign descriptive and consistent names
to loss data to allow for easier data analysis. The relevant
columns can be assigned to the above arguments using a character vector of the column names
or a numeric vector of the column position.
}
\examples{
# use the 'dplyr' package to get raw data in proper format for 'loss_df'
library(dplyr)

losses <- mutate(losses, origin = as.numeric(substr(fiscal_year_desc, 1, 4)),
                 evaluation_year = as.numeric(format(as.Date(evaluation_date, "\%Y-\%m-\%d"), "\%Y")),
                 dev = evaluation_year - origin)

occurences <- losses \%>\%
group_by(claim_number, dev, origin) \%>\%
  summarise(claim_cts = n(),
            payment_amount = sum(payment_amount),
            reserve_amount = sum(reserve_amount),
            paid_expense = sum(X4_exp_payment),
            incurred_expense = sum(X4_exp_reserve),
            sal_sub = sum(payment_no_reserve_a),
            sal_sub_incurred = sum(payment_no_reserve_a)
           )
occurences <- mutate(occurences,
                     paid_loss_only = payment_amount - paid_expense,
                     incurred_loss_only = reserve_amount - incurred_expense,
                     paid_excess250 = max(payment_amount - 250000, 0),
                     incurred_excess250 = max(reserve_amount - 250000, 0))

# create loss_df object
mydf <- loss_df(occurences,  id = "claim_number",
                             origin = "origin",
                             dev = "dev",
                             paid = c("paid_loss_only", "paid_expense"),
                             incurred = c("incurred_loss_only", "incurred_expense"),
                             paid_recovery = c("sal_sub", "paid_excess250"),
                             incurred_recovery = c("incurred_excess250", "sal_sub_incurred"),
                             desc = "claim_cts"
                 )

# use numbers instead of character vector to identify columns
# also you can specify the 'evaluation' date specifically with the
# 'evaluation_date' argument
mydf2 <- loss_df(occurences, id = 1, origin = 7, dev = 2, evaluation_date = 3,
                 paid = c(8, 10), incurred = c(9, 11), desc = 4)
}

