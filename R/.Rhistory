for (j in seq_along(incurred_cols)) {
df$total_incurred <- df$total_incurred + df[, j]
}
df$total_case <- df$total_incurred - df$total_paid
total <- melt(df[, c(type_colname(df_ = df, atr_type = "origin"), "total_paid", "total_case")],  id.vars = 1)
attr(total, "type") <- "origin"
p <- ggplot(df, aes(x = as.factor(total[, type_colnum(df_ = total, atr_type = "origin")]))) +
geom_bar(aes(weight = value, fill = variable)) +
xlab("Origin Year") + ylab("Loss Amounts") +
ggtitle("Loss Amounts by Origin Year")
p
}
plot(losses_loss_df)
melt(df[, c(type_colname(df_ = df, atr_type = c("origin", "paid", "incurred"))],  id.vars = 1)
melt(losses_loss_df[, c(type_colname(df_ = losses_loss_df, atr_type = c("origin", "paid", "incurred"))],  id.vars = 1)
melt(losses_loss_df[, type_colname(df_ = losses_loss_df, atr_type = c("origin", "paid", "incurred")],  id.vars = 1)
melt(losses_loss_df[, type_colname(df_ = losses_loss_df, atr_type = c("origin", "paid", "incurred"))],  id.vars = 1)
melt(data = losses_loss_df[, type_colname(df_ = losses_loss_df, atr_type = c("origin", "paid", "incurred"))],  id.vars = 1)
melt(data = losses_loss_df[, type_colname(df_ = losses_loss_df, atr_type = c("origin", "paid", "incurred"))],  id = 1)
melt(data = losses_loss_df[, c(2, 5, 6)],  id = 1)
head(melt(data = losses_loss_df[, c(2, 5, 6)],  id = 1))
plot.loss_df <- function(df) {
# barchart with stacked loss amounts
paid_cols <- type_colnum(df_ = df, atr_type = "paid")
incurred_cols <- type_colnum(df_ = df, atr_type = "incurred")
df$total_paid <- rep(0, times = nrow(df))
for (i in seq_along(paid_cols)) {
df$total_paid <- df$total_paid + df[, i]
}
df$total_incurred <- rep(0, times = nrow(df))
for (j in seq_along(incurred_cols)) {
df$total_incurred <- df$total_incurred + df[, j]
}
df$total_case <- df$total_incurred - df$total_paid
total <- melt(df[, c(type_colnum(df_ = df, atr_type = "origin"), length(df) - 1, length(df))],  id.vars = 1)
attr(total, "type") <- "origin"
p <- ggplot(df, aes(x = as.factor(total[, type_colnum(df_ = total, atr_type = "origin")]))) +
geom_bar(aes(weight = value, fill = variable)) +
xlab("Origin Year") + ylab("Loss Amounts") +
ggtitle("Loss Amounts by Origin Year")
p
}
plot(losses_loss_df)
plot.loss_df <- function(df) {
# barchart with stacked loss amounts
paid_cols <- type_colnum(df_ = df, atr_type = "paid")
incurred_cols <- type_colnum(df_ = df, atr_type = "incurred")
df2 <- df
df2$total_paid <- rep(0, times = nrow(df2))
for (i in seq_along(paid_cols)) {
df2$total_paid <- df$total_paid + df2[, i]
}
df2$total_incurred <- rep(0, times = nrow(df2))
for (j in seq_along(incurred_cols)) {
df$total_incurred <- df$total_incurred + df[, j]
}
df2$total_case <- df2$total_incurred - df2$total_paid
df2 <- carry_attr(df1 = df, df2 = df2)
total <- melt(df[, c(type_colnum(df_ = df, atr_type = "origin"), length(df) - 1, length(df))],  id.vars = 1)
attr(total, "type") <- "origin"
p <- ggplot(df, aes(x = as.factor(total[, type_colnum(df_ = total, atr_type = "origin")]))) +
geom_bar(aes(weight = value, fill = variable)) +
xlab("Origin Year") + ylab("Loss Amounts") +
ggtitle("Loss Amounts by Origin Year")
p
}
plot(losses_loss_df)
plot.loss_df <- function(df) {
# barchart with stacked loss amounts
paid_cols <- type_colnum(df_ = df, atr_type = "paid")
incurred_cols <- type_colnum(df_ = df, atr_type = "incurred")
df2 <- df
df2$total_paid <- rep(0, times = nrow(df2))
for (i in seq_along(paid_cols)) {
df2$total_paid <- df$total_paid + df2[, i]
}
df2$total_incurred <- rep(0, times = nrow(df2))
for (j in seq_along(incurred_cols)) {
df2$total_incurred <- df2$total_incurred + df2[, j]
}
df2$total_case <- df2$total_incurred - df2$total_paid
df2 <- carry_attr(df1 = df, df2 = df2)
total <- melt(df[, c(type_colnum(df_ = df2, atr_type = "origin"), length(df2) - 1, length(df2))],  id.vars = 1)
attr(total, "type") <- "origin"
p <- ggplot(df, aes(x = as.factor(total[, type_colnum(df_ = total, atr_type = "origin")]))) +
geom_bar(aes(weight = value, fill = variable)) +
xlab("Origin Year") + ylab("Loss Amounts") +
ggtitle("Loss Amounts by Origin Year")
p
}
plot(losses_loss_df)
my_df <- losses_loss_df
paid_cols <- type_colnum(df_ = my_df, atr_type = "paid")
incurred_cols <- type_colnum(df_ = my_df, atr_type = "incurred")
df2 <- my_df
df2$total_paid <- rep(0, times = nrow(df2))
for (i in seq_along(paid_cols)) {
df2$total_paid <- df$total_paid + df2[, i]
}
for (i in seq_along(paid_cols)) {
df2$total_paid <- df2$total_paid + df2[, i]
}
df2$total_incurred <- rep(0, times = nrow(df2))
for (j in seq_along(incurred_cols)) {
df2$total_incurred <- df2$total_incurred + df2[, j]
}
df2$total_case <- df2$total_incurred - df2$total_paid
str(df2)
total <- melt(df2[, c(type_colnum(df_ = df2, atr_type = "origin"), length(df2) - 1, length(df2))],  id.vars = 1)
head(total)
nrow(df2)
rep(0, times = nrow(df2))
attributes(df2)
head(total)
total <- melt(df2[, c(type_colnum(df_ = df2, atr_type = c("id", "origin")), length(df2) - 1, length(df2))],  id = c(1, 2))
head(total)
total <- melt(df2[df2[, type_colnum(df_ = df2, atr_type = "evaluation_date")] == "2013-06-30", c(type_colnum(df_ = df2, atr_type = c("id", "origin")), length(df2) - 1, length(df2))],  id = c(1, 2))
head(total)
summary(losses_loss_df)
plot.loss_df <- function(df) {
# barchart with stacked loss amounts
df2 <- summary(df)
df2 <- carry_attr(df1 = df, df2 = df2)
paid_cols <- type_colnum(df_ = df, atr_type = "paid")
incurred_cols <- type_colnum(df_ = df, atr_type = "incurred")
df2$total_paid <- rep(0, times = nrow(df2))
for (i in seq_along(paid_cols)) {
df2$total_paid <- df2$total_paid + df2[, i]
}
df2$total_incurred <- rep(0, times = nrow(df2))
for (j in seq_along(incurred_cols)) {
df2$total_incurred <- df2$total_incurred + df2[, j]
}
df2$total_case <- df2$total_incurred - df2$total_paid
total <- melt(df2[, c(type_colnum(df_ = df2, atr_type = "origin"), length(df2) - 1, length(df2))],  id.vars = 1)
attr(total, "type") <- "origin"
p <- ggplot(total, aes(x = as.factor(total[, type_colnum(df_ = total, atr_type = "origin")]))) +
geom_bar(aes(weight = value, fill = variable)) +
xlab("Origin Year") + ylab("Loss Amounts") +
ggtitle("Loss Amounts by Origin Year")
p
}
summary(losses_loss_df)
plot(losses_loss_df)
plot.loss_df <- function(df) {
# barchart with stacked loss amounts
df2 <- summary(df)
df2 <- carry_attr(df1 = df, df2 = df2)
paid_cols <- type_colnum(df_ = df2, atr_type = "paid")
incurred_cols <- type_colnum(df_ = df2, atr_type = "incurred")
df2$total_paid <- rep(0, times = nrow(df2))
for (i in seq_along(paid_cols)) {
df2$total_paid <- df2$total_paid + df2[, i]
}
df2$total_incurred <- rep(0, times = nrow(df2))
for (j in seq_along(incurred_cols)) {
df2$total_incurred <- df2$total_incurred + df2[, j]
}
df2$total_case <- df2$total_incurred - df2$total_paid
total <- melt(df2[, c(type_colnum(df_ = df2, atr_type = "origin"), length(df2) - 1, length(df2))],  id.vars = 1)
attr(total, "type") <- "origin"
p <- ggplot(total, aes(x = as.factor(total[, type_colnum(df_ = total, atr_type = "origin")]))) +
geom_bar(aes(weight = value, fill = variable)) +
xlab("Origin Year") + ylab("Loss Amounts") +
ggtitle("Loss Amounts by Origin Year")
p
}
plot(losses_loss_df)
df2 <- summary(losses_loss_df)
df2
df2 <- carry_attr(df1 = df, df2 = df2)
str(df2)
df2 <- as.data.frame(summary(losses_loss_df))
df2 <- carry_attr(df1 = df, df2 = df2)
str(df2)
paid_cols <- type_colnum(df_ = df2, atr_type = "paid")
incurred_cols <- type_colnum(df_ = df2, atr_type = "incurred")
paid_cols
str(df2)
df2 <- carry_attr(df1 = losses_loss_df, df2 = df2)
str(df2)
paid_cols <- type_colnum(df_ = df2, atr_type = "paid")
incurred_cols <- type_colnum(df_ = df2, atr_type = "incurred")
df2
rownames(df2)
df2[, type_colname(df_ = losses_loss_df, atr_type = "origin")] <- rownames(df2)
df2 <- carry_attr(df1 = losses_loss_df, df2 = df2)
df2
df2$total_paid <- rep(0, times = nrow(df2))
for (i in seq_along(paid_cols)) {
df2$total_paid <- df2$total_paid + df2[, i]
}
df2$total_incurred <- rep(0, times = nrow(df2))
for (j in seq_along(incurred_cols)) {
df2$total_incurred <- df2$total_incurred + df2[, j]
}
df2
df2$total_case <- df2$total_incurred - df2$total_paid
str(df2)
attr(df2, "type")
total <- melt(df2[, c(type_colnum(df_ = df2, atr_type = "origin"), length(df2) - 1, length(df2))],  id.vars = type_colnum(df_ = df2, atr_type = "origin"))
total <- melt(df2[, c(type_colnum(df_ = df2, atr_type = "origin"), length(df2) - 1, length(df2))],  id.vars = 1)
total
df2
paid_cols
incurred_cols
seq_along(paid_cols)
seq_along(incurred_cols)
?seq_along
seq(stats::rnorm(20))
seq_len(incurred_cols)
df2$total_paid <- rep(0, times = nrow(df2))
for (i in seq_along(paid_cols)) {
df2$total_paid <- df2$total_paid + df2[, paid_cols[i]]
}
df2$total_incurred <- rep(0, times = nrow(df2))
for (j in seq_along(incurred_cols)) {
df2$total_incurred <- df2$total_incurred + df2[, incurred_cols[j]]
}
df2$total_case <- df2$total_incurred - df2$total_paid
df2
total <- melt(df2[, c(type_colnum(df_ = df2, atr_type = "origin"), length(df2) - 1, length(df2))],  id.vars = 1)
total
total <- melt(df2[, c(type_colnum(df_ = df2, atr_type = "origin"), length(df2) - 2, length(df2))],  id.vars = 1)
total
attr(total, "type") <- "origin"
p <- ggplot(total, aes(x = as.factor(total[, type_colnum(df_ = total, atr_type = "origin")]))) +
geom_bar(aes(weight = value, fill = variable)) +
xlab("Origin Year") + ylab("Loss Amounts") +
ggtitle("Loss Amounts by Origin Year")
p
plot.loss_df <- function(df) {
# barchart with stacked loss amounts
df2 <- summary(df)
df2 <- carry_attr(df1 = df, df2 = df2)
paid_cols <- type_colnum(df_ = df2, atr_type = "paid")
incurred_cols <- type_colnum(df_ = df2, atr_type = "incurred")
df2$total_paid <- rep(0, times = nrow(df2))
for (i in seq_along(paid_cols)) {
df2$total_paid <- df2$total_paid + df2[, paid_cols[i]]
}
df2$total_incurred <- rep(0, times = nrow(df2))
for (j in seq_along(incurred_cols)) {
df2$total_incurred <- df2$total_incurred + df2[, incurred_cols[j]]
}
df2$total_case <- df2$total_incurred - df2$total_paid
total <- melt(df2[, c(type_colnum(df_ = df2, atr_type = "origin"), length(df2) - 2, length(df2))],  id.vars = 1)
attr(total, "type") <- "origin"
p <- ggplot(total, aes(x = as.factor(total[, type_colnum(df_ = total, atr_type = "origin")]))) +
geom_bar(aes(weight = value, fill = variable)) +
xlab("Origin Year") + ylab("Loss Amounts") +
ggtitle("Loss Amounts by Origin Year")
p
}
plot(losses_loss_df)
plot.loss_df <- function(df) {
# barchart with stacked loss amounts
df2 <- as.data.frame(summary(df))
df2[, type_colname(df_ = losses_loss_df, atr_type = "origin")]
df2 <- carry_attr(df1 = df, df2 = df2)
paid_cols <- type_colnum(df_ = df2, atr_type = "paid")
incurred_cols <- type_colnum(df_ = df2, atr_type = "incurred")
df2$total_paid <- rep(0, times = nrow(df2))
for (i in seq_along(paid_cols)) {
df2$total_paid <- df2$total_paid + df2[, paid_cols[i]]
}
df2$total_incurred <- rep(0, times = nrow(df2))
for (j in seq_along(incurred_cols)) {
df2$total_incurred <- df2$total_incurred + df2[, incurred_cols[j]]
}
df2$total_case <- df2$total_incurred - df2$total_paid
total <- melt(df2[, c(type_colnum(df_ = df2, atr_type = "origin"), length(df2) - 2, length(df2))],  id.vars = 1)
attr(total, "type") <- "origin"
p <- ggplot(total, aes(x = as.factor(total[, type_colnum(df_ = total, atr_type = "origin")]))) +
geom_bar(aes(weight = value, fill = variable)) +
xlab("Origin Year") + ylab("Loss Amounts") +
ggtitle("Loss Amounts by Origin Year")
p
}
plot(losses_loss_df)
plot.loss_df <- function(df) {
# barchart with stacked loss amounts
df2 <- as.data.frame(summary(df))
df2[, type_colname(df_ = df, atr_type = "origin")] <- rownames(df2)
df2 <- carry_attr(df1 = df, df2 = df2)
paid_cols <- type_colnum(df_ = df2, atr_type = "paid")
incurred_cols <- type_colnum(df_ = df2, atr_type = "incurred")
df2$total_paid <- rep(0, times = nrow(df2))
for (i in seq_along(paid_cols)) {
df2$total_paid <- df2$total_paid + df2[, paid_cols[i]]
}
df2$total_incurred <- rep(0, times = nrow(df2))
for (j in seq_along(incurred_cols)) {
df2$total_incurred <- df2$total_incurred + df2[, incurred_cols[j]]
}
df2$total_case <- df2$total_incurred - df2$total_paid
total <- melt(df2[, c(type_colnum(df_ = df2, atr_type = "origin"), length(df2) - 2, length(df2))],  id.vars = 1)
attr(total, "type") <- "origin"
p <- ggplot(total, aes(x = as.factor(total[, type_colnum(df_ = total, atr_type = "origin")]))) +
geom_bar(aes(weight = value, fill = variable)) +
xlab("Origin Year") + ylab("Loss Amounts") +
ggtitle("Loss Amounts by Origin Year")
p
}
plot(losses_loss_df)
library(devtools)
setwd("C:/Users/Andy/Google Drive/R Projects")
document("reserve")
install("reserve")
?loss_df
library(dplyr)
losses <- mutate(losses, origin = as.numeric(substr(fiscal_year_desc, 1, 4)),
evaluation_year = as.numeric(format(evaluation_date, "%Y")),
dev = evaluation_year - origin)
occurences <- losses %.%
group_by(claim_number, dev, evaluation_date) %.%
summarise(claim_cts = n(),
payment_amount = sum(payment_amount),
reserve_amount = sum(reserve_amount),
origin = mean(origin),
paid_expense = sum(X4_exp_payment),
incurred_expense = sum(X4_exp_reserve)
)
occurences <- mutate(occurences, paid_loss_only = payment_amount - paid_expense,
incurred_loss_only = reserve_amount - incurred_expense)
my_df <- loss_df(occurences, id = "claim_number",
origin = "origin",
dev = "dev",
evaluation_date = "evaluation_date",
paid = c("paid_loss_only", "paid_expense"),
incurred = c("incurred_loss_only", "incurred_expense"),
desc = "claim_cts"
)
head(my_df)
?reserve::changes
?changes
reserve::changes(my_df, eval1 = "2013-06_30", eval2 = "2012-06-30")
reserve::changes(my_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
reserve::changes(my_df, eval1 = "2013-06-30", eval2 = "2012-06-30", values = c("paid_loss_only"))
summary(my_df)
summary(my_df, evaluation_date = "2012-06-30")
plot(my_df)
df <- my_df
df2 <- as.data.frame(summary(df))
df2[, type_colname(df_ = df, atr_type = "origin")] <- rownames(df2)
type_colname <- function(df_, atr_type) {
col_name <- sapply(atr_type, function(x) names(df_[, attr(df_, "type") == x, drop = FALSE]))
as.vector(col_name)
}
# find column numbers that have a certain 'type' attribute
type_colnum <- function(df_, atr_type) {
col_index <- function(x) {
colnum <- which(attr(df_, "type") %in% x)
colnum
}
col_num <- sapply(atr_type, col_index)
as.vector(col_num)
}
# carry appropriate attributes over to subsetted data frame
carry_attr <- function(df1, df2) {
type_index <- match(names(df2), names(df1))
type_index <- type_index[!is.na(type_index)]
attr(df2, "type") <- attr(df1, "type")[type_index]
df2
}
df2[, type_colname(df_ = df, atr_type = "origin")] <- rownames(df2)
df2 <- carry_attr(df1 = df, df2 = df2)
paid_cols <- type_colnum(df_ = df2, atr_type = "paid")
incurred_cols <- type_colnum(df_ = df2, atr_type = "incurred")
df2$total_paid <- rep(0, times = nrow(df2))
for (i in seq_along(paid_cols)) {
df2$total_paid <- df2$total_paid + df2[, paid_cols[i]]
}
df2$total_incurred <- rep(0, times = nrow(df2))
for (j in seq_along(incurred_cols)) {
df2$total_incurred <- df2$total_incurred + df2[, incurred_cols[j]]
}
df2$total_case <- df2$total_incurred - df2$total_paid
library(reshape2)
total <- melt(df2[, c(type_colnum(df_ = df2, atr_type = "origin"), length(df2) - 2, length(df2))],  id.vars = 1)
attr(total, "type") <- "origin"
p <- ggplot(total, aes(x = as.factor(total[, type_colnum(df_ = total, atr_type = "origin")]))) +
geom_bar(aes(weight = value, fill = variable)) +
xlab("Origin Year") + ylab("Loss Amounts") +
ggtitle("Loss Amounts by Origin Year")
p
library(ggplot2)
p <- ggplot(total, aes(x = as.factor(total[, type_colnum(df_ = total, atr_type = "origin")]))) +
geom_bar(aes(weight = value, fill = variable)) +
xlab("Origin Year") + ylab("Loss Amounts") +
ggtitle("Loss Amounts by Origin Year")
p
plot(losses_loss_df)
df <- losses_loss_df
evaluation_date <- NULL
type_colname <- function(df_, atr_type) {
col_name <- sapply(atr_type, function(x) names(df_[, attr(df_, "type") == x, drop = FALSE]))
as.vector(col_name)
}
# find column numbers that have a certain 'type' attribute
type_colnum <- function(df_, atr_type) {
col_index <- function(x) {
colnum <- which(attr(df_, "type") %in% x)
colnum
}
col_num <- sapply(atr_type, col_index)
as.vector(col_num)
}
# carry appropriate attributes over to subsetted data frame
carry_attr <- function(df1, df2) {
type_index <- match(names(df2), names(df1))
type_index <- type_index[!is.na(type_index)]
attr(df2, "type") <- attr(df1, "type")[type_index]
df2
}
plot.loss_df <- function(df, evaluation_date = NULL) {
# barchart with stacked loss amounts
df2 <- if (is.null(evaluation_date)) {
as.data.frame(summary(df))
} else {
as.data.frame(summary(df), evaluation_date = evaluation_date)
}
df2[, type_colname(df_ = df, atr_type = "origin")] <- rownames(df2)
df2 <- carry_attr(df1 = df, df2 = df2)
paid_cols <- type_colnum(df_ = df2, atr_type = "paid")
incurred_cols <- type_colnum(df_ = df2, atr_type = "incurred")
df2$total_paid <- rep(0, times = nrow(df2))
for (i in seq_along(paid_cols)) {
df2$total_paid <- df2$total_paid + df2[, paid_cols[i]]
}
df2$total_incurred <- rep(0, times = nrow(df2))
for (j in seq_along(incurred_cols)) {
df2$total_incurred <- df2$total_incurred + df2[, incurred_cols[j]]
}
df2$total_case <- df2$total_incurred - df2$total_paid
total <- melt(df2[, c(type_colnum(df_ = df2, atr_type = "origin"), length(df2) - 2, length(df2))],  id.vars = 1)
attr(total, "type") <- "origin"
p <- ggplot(total, aes(x = as.factor(total[, type_colnum(df_ = total, atr_type = "origin")]))) +
geom_bar(aes(weight = value, fill = variable)) +
xlab("Origin Year") + ylab("Loss Amounts") +
ggtitle("Loss Amounts by Origin Year")
p
}
plot(losses_loss_df)
df2 <- if (is.null(evaluation_date)) {
as.data.frame(summary(df))
} else {
as.data.frame(summary(df), evaluation_date = evaluation_date)
}
df2[, type_colname(df_ = df, atr_type = "origin")] <- rownames(df2)
df2 <- carry_attr(df1 = df, df2 = df2)
paid_cols <- type_colnum(df_ = df2, atr_type = "paid")
incurred_cols <- type_colnum(df_ = df2, atr_type = "incurred")
df2$total_paid <- rep(0, times = nrow(df2))
for (i in seq_along(paid_cols)) {
df2$total_paid <- df2$total_paid + df2[, paid_cols[i]]
}
df2$total_incurred <- rep(0, times = nrow(df2))
for (j in seq_along(incurred_cols)) {
df2$total_incurred <- df2$total_incurred + df2[, incurred_cols[j]]
}
df2$total_case <- df2$total_incurred - df2$total_paid
total <- melt(df2[, c(type_colnum(df_ = df2, atr_type = "origin"), length(df2) - 2, length(df2))],  id.vars = 1)
attr(total, "type") <- "origin"
p <- ggplot(total, aes(x = as.factor(total[, type_colnum(df_ = total, atr_type = "origin")]))) +
geom_bar(aes(weight = value, fill = variable)) +
xlab("Origin Year") + ylab("Loss Amounts") +
ggtitle("Loss Amounts by Origin Year")
p
detach("package:dplyr", unload=TRUE)
detach("package:reserve", unload=TRUE)
remove.packages("reserve", lib="C:/Program Files/R/R-3.1.0/library")
load_all("reserve")
changes(loss_loss_df)
load("C:/Users/Andy/Google Drive/R Projects/reserve/data/losses.rda")
load("C:/Users/Andy/Google Drive/R Projects/reserve/data/losses_loss_df.rda")
changes(losses_loss_df)
changes(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
changes(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30", values = "paid_loss_only")
load_all("reserve")
changes(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30", values = "paid_loss_only")
changes(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
load_all("reserve")
changes(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
load_all("reserve")
changes(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
summary(losses_loss_df)
plot(losses_loss_df)
library(ggplot2)
ggplot(losses_loss_df, aes(x = as.factor("paid_loss_only")))
ggplot(losses_loss_df, aes(x = as.factor("origin"))) +
geom_bar()
ggplot(losses_loss_df, aes(x = as.factor(origin))) +
geom_bar()
load_all("reserve")
load_all("reserve")
load_all("reserve")
plot(losses_loss_df)
load("C:/Users/Andy/Google Drive/R Projects/reserve/data/losses.rda")
length(losses)
as.factor(losses$evaluation_date)
eval <- as.factor(losses$evaluation_date)
levels(eval)
?mtcars
nrows(losses)
nrow(losses)
setwd("C:/Users/Andy/Google Drive/R Projects/reserve/R")
load("C:/Users/Andy/Google Drive/R Projects/reserve/data/losses_loss_df.rda")
str(losses)
str(losses_loss_df)
?merge
?join
