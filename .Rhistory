install("reserve")
install("reserve")
head(compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30"),10)
install("reserve")
head(compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30"),10)
v<- c(0, 0, 0, 0)
all.equal(v, 0)
isTRUE(all.equal(v, 0))
isTRUE(all.equal(0, 0))
v <- 0
names(v) <- "Andy"
isTRUE(all.eual(v, 0))
isTRUE(all.equal(v, 0))
zero_range <- function(x, tol = .Machine$double.eps ^ 0.5) {
if (length(x) == 1) return(TRUE)
x <- range(x) / mean(x)
isTRUE(all.equal(x[1], x[2], tolerance = tol))
}
v <- c(1, 1, 1, 1)
cero_range(v)
zero_range(v)
range(v) / mean(v)
install("reserve")
head(compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30"),10)
install("reserve")
install("reserve")
head(compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30"),10)
install("reserve")
head(compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30"),10)
install("reserve")
head(compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30"),10)
install("reserve")
head(compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30"),10)
all_same <- function(x) {
if (length(x) == 1) return(x[1])
x <- range(x) / mean(x)
out <- if (isTRUE(all.equal(x[1], x[2], tolerance = .009))) {
x[1]
} else {
1
}
out
}
test_zero <- apply([, (length(comparison) + 1 - length(values)):length(comparison), drop = FALSE], 1, all_same)
str(all.equal(v))
all.equal(v)
all.equal(v, 0)
str(all.equal(v, 0))
str(all.equal(v, 0, check.attributes = FALSE))
isTRUE(all.equal(v, 0, check.attributes = FALSE))
isTRUE(all.equal(v, rep(0, length(v)), check.attributes = FALSE))
?rep
isTRUE(all.equal(v, rep(1, length(v)), check.attributes = FALSE))
install("reserve")
install("reserve")
head(compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30"),10)
install("reserve")
head(compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30"),10)
head(compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30"),10)
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
document("reserve")
library("devtools")
getwd()
setwd("C:/Users/Andy/Google Drive/R Projects")
getwd()
document("reserve")
install("reserve")
?compare
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
install("reserve")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
df <- data.frame(c(1:3, 1), c("a", "b", "a", "b"), runif(4, 0, 1))
df <- data.frame(c(1:3), c("a", "b", "c"), runif(3, 0, 1))
df2 <- data.frame(c(1:3), c("a", "b", "d"), runif(3, 0, 1))
names(df)
names(df) <- c("num", "type", "value")
names(df2) <- c("num", "type", "value")
merge(df, df2, by = c("num", "type"))
merge(df, df2, by = c("num", "type"), all.x = TRUE, all.y = TRUE)
merge(df, df2, by = c("num", "type"), all.x = TRUE, all.y = TRUE, suffixes = c("_1", "_2"))
install("reserve")
?comparison
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
names(compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30"))
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
install("reserve")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
names(compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30"))
install("reserve")
names(compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30"))
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
document("reserve")
install("reserve")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
document("reserve")
install("reserve")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
names(compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30"))
install("reserve")
names(compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30"))
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
install("reserve")
names(compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30"))
df
names(df[, length(df)]) <- "steve"
df
names(df[, length(df), drop = FALSE]) <- "steve"
colnames(df[, :length(df), drop = FALSE]) <- "steve"
colnames(df[, length(df), drop = FALSE]) <- "steve"
colnames(df[, length(df)]) <- "steve"
df[, length(df), drop = FALSE]
str(df[, length(df), drop = FALSE])
names(df[, length(df), drop = FALSE]) <- c("steve")
names(df)[length(df)] <- "stevie"
df
install("reserve")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
names(compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30"))
install("reserve")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
names(compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30"))
?compare
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30", values = "paid_loss")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30", values = "paid_loss")
head(losses_loss_df)
install("reserve")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30", values = "paid_loss")
losses_loss_df[, c("id", "origin", "paid_loss")]
head(losses_loss_df[, c("id", "origin", "paid_loss")])
?compare
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
library("devtools")
setwd("C:/Users/Andy/Google Drive/R Projects")
install("reserve")
library(reserve)
?compare
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30", values = "paid_loss")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30", values = "paid_loss")
install("reserve")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
install("reserve")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
install("reserve")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30", values = "paid_loss")
install("reserve")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30", values = "paid_loss")
install("reserve")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30", values = "paid_loss")
install("reserve")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
install("reserve")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
install("reserve")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
install("reserve")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30", values = "paid_loss")
head(losses_loss_df[, c("id", "origin", "paid_loss")]
)
install("reserve")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30", values = "paid_loss")
install("reserve")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30", values = "paid_loss")
install("reserve")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30", values = "paid_loss")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30", values = c("paid_loss", "incurred_loss", "claims_reported"))
install("reserve")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30", values = c("paid_loss", "incurred_loss", "claims_reported"))
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
compare(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30", values = "paid_loss")
str(losses_loss_df)
is.numeric(losses_loss_df)
apply(losses_loss_df, 2, is.numeric)
apply(losses_loss_df, 2, typeof)
lapply(losses_loss_df, is.numeric)
str(losses_loss_df)
?ceiling
grpsize <- ceiling(1e7/26^2)
grpsize
26^2
install.packages("data.table")
install.packages(c("caTools", "reshape2", "scales"))
install.packages("memoise", lib="C:/Program Files/R/R-3.1.0/library")
library(devtools)
setwd("C:/Users/Andy/Google Drive/R Projects")
document("reserve")
?local
getwd()
setwd("~/Google Drive/R Projects")
getwd()
library(devtools)
load("~/Google Drive/R Projects/reserve/data/losses_loss_df.rda")
summary(losses_loss_df)
load_all(losses_loss_df)
load_all(reserve)
load_all("reserve")
summary(losses_loss_df)
str(summary_loss_df)
str(summary(loss_df))
test <- summary(loss_df)
summary(loss_df)
test <- summary(losses_loss_df)
test
str(test)
?attr
summary(losses_loss_df)
attribues(test)
attributes(test)
load_all("reserve")
summary(losses_loss_df)
test <- summary(losses_loss_df)
str(test)
attr(test, "eval") <- "2012-06-30"
str(test)
load_all(reserve)
load_all("reserve")
test <- summary(losses_loss_df)
test
str(test)
summary.loss_df <- function(df, evaluation_date = NULL) {
df$calendar <- df[, type_colname(df_ = df, atr_type = "origin")] +
df[, type_colname(df_ = df, atr_type = "dev")]
cols <- type_colnum(df_ = df, atr_type = c("id", "dev"))
df2 <- df[, -cols]
df2 <- carry_attr(df1 = df, df2 = df2)
attr(df2, "type")[length(attr(df2, "type"))] <- "calendar"
if (is.null(evaluation_date)){
latest <- df2[df2$calendar == max(df2$calendar), -type_colnum(df_ = df2, atr_type = "evaluation_date")]
latest <- carry_attr(df1 = df2, df2 = latest)
latest_no_origin <- latest[, -type_colnum(df_ = latest, atr_type = "origin")]
smry <- apply(latest_no_origin, 2,
function(x) tapply(x, latest[, type_colname(df_ = latest, atr_type = "origin")], sum))
} else {
selected <- df2[df2[, type_colname(df_ = df2, atr_type = "evaluation_date")] == evaluation_date,
-type_colnum(df_ = df2, atr_type = "evaluation_date")]
selected <- carry_attr(df1 = df2, df2 = selected)
selected_no_origin <- selected[, -type_colnum(df_ = selected, atr_type = "origin")]
smry <- apply(selected[, -which(names(selected) %in% type_colname(df_ = selected, atr_type = "origin"))], 2,
function(x) tapply(x, selected[, type_colname(df_ = selected, atr_type = "origin")], sum))
}
smry <- smry[, -which(colnames(smry) == "calendar")]
attr(smry, "eval") <- evaluation_date
smry
}
num_to_name <- function(df, value) {
if (!missing(value) && is.numeric(value)) {
value <- names(df)[value]
}
value
}
# find column names that have a certain 'type' attribute
type_colname <- function(df_, atr_type) {
col_name <- sapply(atr_type, function(x) names(df_[, attr(df_, "type") == x, drop = FALSE]))
as.vector(col_name)
}
# find column numbers that have a certain 'type' attribute
type_colnum <- function(df_, atr_type) {
col_index <- function(x) {
colnum <- which(attr(df_, "type") %in% x)
colnum
}
col_num <- sapply(atr_type, col_index)
as.vector(col_num)
}
# carry appropriate attributes over to subsetted data frame
carry_attr <- function(df1, df2) {
type_index <- match(names(df2), names(df1))
type_index <- type_index[!is.na(type_index)]
attr(df2, "type") <- attr(df1, "type")[type_index]
df2
}
test <- summary(losses_loss_df)
str(test)
summary.loss_df <- function(df, evaluation_date = NULL) {
df$calendar <- df[, type_colname(df_ = df, atr_type = "origin")] +
df[, type_colname(df_ = df, atr_type = "dev")]
cols <- type_colnum(df_ = df, atr_type = c("id", "dev"))
df2 <- df[, -cols]
df2 <- carry_attr(df1 = df, df2 = df2)
attr(df2, "type")[length(attr(df2, "type"))] <- "calendar"
if (is.null(evaluation_date)){
latest <- df2[df2$calendar == max(df2$calendar), -type_colnum(df_ = df2, atr_type = "evaluation_date")]
latest <- carry_attr(df1 = df2, df2 = latest)
latest_no_origin <- latest[, -type_colnum(df_ = latest, atr_type = "origin")]
smry <- apply(latest_no_origin, 2,
function(x) tapply(x, latest[, type_colname(df_ = latest, atr_type = "origin")], sum))
attr(smry, "eval") <- "latest"
} else {
selected <- df2[df2[, type_colname(df_ = df2, atr_type = "evaluation_date")] == evaluation_date,
-type_colnum(df_ = df2, atr_type = "evaluation_date")]
selected <- carry_attr(df1 = df2, df2 = selected)
selected_no_origin <- selected[, -type_colnum(df_ = selected, atr_type = "origin")]
smry <- apply(selected[, -which(names(selected) %in% type_colname(df_ = selected, atr_type = "origin"))], 2,
function(x) tapply(x, selected[, type_colname(df_ = selected, atr_type = "origin")], sum))
attr(smry, "eval") <- evaluation_date
}
smry <- smry[, -which(colnames(smry) == "calendar")]
smry
}
test <- summary(losses_loss_df)
smry(test)
summary(test)
str(test)
test <- summary(losses_loss_df, evaluation_date = "2012-06-30")
str(test)
summary.loss_df <- function(df, evaluation_date = NULL) {
df$calendar <- df[, type_colname(df_ = df, atr_type = "origin")] +
df[, type_colname(df_ = df, atr_type = "dev")]
cols <- type_colnum(df_ = df, atr_type = c("id", "dev"))
df2 <- df[, -cols]
df2 <- carry_attr(df1 = df, df2 = df2)
attr(df2, "type")[length(attr(df2, "type"))] <- "calendar"
if (is.null(evaluation_date)){
latest <- df2[df2$calendar == max(df2$calendar), -type_colnum(df_ = df2, atr_type = "evaluation_date")]
latest <- carry_attr(df1 = df2, df2 = latest)
latest_no_origin <- latest[, -type_colnum(df_ = latest, atr_type = "origin")]
smry <- apply(latest_no_origin, 2,
function(x) tapply(x, latest[, type_colname(df_ = latest, atr_type = "origin")], sum))
attr(smry, "eval") <- "latest"
} else {
selected <- df2[df2[, type_colname(df_ = df2, atr_type = "evaluation_date")] == evaluation_date,
-type_colnum(df_ = df2, atr_type = "evaluation_date")]
selected <- carry_attr(df1 = df2, df2 = selected)
selected_no_origin <- selected[, -type_colnum(df_ = selected, atr_type = "origin")]
smry <- apply(selected[, -which(names(selected) %in% type_colname(df_ = selected, atr_type = "origin"))], 2,
function(x) tapply(x, selected[, type_colname(df_ = selected, atr_type = "origin")], sum))
attr(smry, "eval") <- evaluation_date
}
smry <- smry[, -which(colnames(smry) == "calendar")]
attr(smry, "eval") <- evaluation_date
smry
}
test <- summary(losses_loss_df, evaluation_date = "2012-06-30")
str(test)
library(devtools)
getwd()
setwd("~/Google Drive/R Projects")
load_all("reserve")
load("~/Google Drive/R Projects/reserve/data/losses_loss_df.rda")
str(losses_loss_df)
losses_loss_df$claim_number <- as.factor(losses_loss_df$claim_number)
setwd("~/Google Drive/R Projects/reserve/data")
str(losses_loss_df)
losses_ldf <- losses_loss_df
save(losses_ldf, file = "losses_ldf.rda")
load("~/Google Drive/R Projects/reserve/data/losses_ldf.rda")
type_colnum(df_ = losses_ldf, c("paid", "id"))
load_all("reserve")
setwd("~/Google Drive/R Projects")
load_all("reserve")
type_colnum(df_ = losses_ldf, c("paid", "id"))
changes(losses_loss_df, eval1 = "2013-06-30", eval2 = "2012-06-30")
changes(losses_ldf, eval1 = "2013-06-30", eval2 = "2012-06-30")
changes(losses_ldf, eval1 = "2013-06-30", eval2 = "2012-06-30", values = "paid_loss_only")
load_all("reserve")
changes(losses_ldf, eval1 = "2013-06-30", eval2 = "2012-06-30", values = "paid_loss_only")
changes(losses_ldf, eval1 = "2013-06-30", eval2 = "2012-06-30",
values = c("paid_loss_only", "incurred_loss_only", "claim_cts"))
changes(losses_ldf, eval1 = "2013-06-30", eval2 = "2012-06-30",
values = c(6, 8, 9))
summary(losses_loss_df)
summary(losses_ldf)
test[, type_colname(df_ = losses_ldf, atr_type = "origin")] <- rownames(test)
test <- summary(losses_ldf)
test[, type_colname(df_ = losses_ldf, atr_type = "origin")] <- rownames(test)
names(test$paid_loss_only) <- "new_name"
origin <- data.frame(rownames(losses_ldf))
origin
origin <- data.frame(rownames(test))
origin
load_all("reserve")
summary(losses_ldf)
typeof(summary(losses_ldf))
class(summary(losses_ldf))
str(summary(losses_ldf))
load_all("reserve")
summary(loss_ldf)
summary(losses_ldf)
load_all("reserve")
summary(losses_ldf)
plot(losses_loss_df)
plot(losses_ldf)
plot(losses_ldf, evaluation_date = "2012-06-30")
plot(losses_ldf)
load_all("reserve")
plot(losses_ldf)
load_all("reserve")
plot(losses_ldf)
plot(losses_ldf)
load_all("reserve")
plot(losses_ldf)
load_all("reserve")
plot(losses_ldf)
sum_type <- function(df, type) {
cols <- type_colnum(df_ = df, type = type)
total <- c()
for (i in seq_along(cols)) {
total <- total + df[, cols[i]]
}
total <- as.data.frame(total)
total
}
type_colnum <- function(df_, type) {
col_index <- function(x) {
colnum <- which(attr(df_, "type") %in% x)
colnum
}
col_num <- sapply(type, col_index)
unlist(col_num)
}
sum_type(df = losses_ldf, type = "paid")
sum_type <- function(df, type) {
cols <- type_colnum(df_ = df, type = type)
type_cols <- df[, cols]
total <- apply(type_cols, 1, sum)
total <- as.data.frame(total)
total
}
sum_type(losses_ldf, type = "paid")
sum_type(summary(losses_ldf), type = "paid")
load_all("reserve")
plot(losses_ldf)
test <- summary(losses_ldf)
test
carry_attr <- function(df1, df2) {
type_index <- match(names(df2), names(df1))
type_index <- type_index[!is.na(type_index)]
attr(df2, "type") <- attr(df1, "type")[type_index]
df2
}
carry_attr(losses_ldf, test)
str(test)
attributes(losses_ldf)
attributes(test)
carry_attr(df1 = losses_ldf, df2 = test)
test <- carry_attr(df1 = losses_ldf, df2 = test)
str(test)
sum_type(df = test, type = "paid")
test$total_paid <- sum_type(df = test, type = "paid")
test
sum_type <- function(df, type) {
cols <- type_colnum(df_ = df, type = type)
type_cols <- df[, cols]
total <- apply(type_cols, 1, sum)
total
}
test$total_paid <- sum_type(df = test, type = "paid")
test
load_all("reserve")
plot(losses_loss_df)
plot(losses_ldf)
plot(losses)
plot(losses_ldf, evaluation_date = "2012-06-30")
load_all("reserve")
plot(losses_ldf, evaluation_date = "2012-06-30")
plot(losses_ldf, evaluation_date = "2011-06-30")
testing <- function(df, eval)
if (is.null(eval)) {
df2 <- as.data.frame(summary(df))
} else {
df2 <- as.data.frame(summary(df), evaluation_date = eval)
}
df2
}
testing <- function(df, eval) {
if (is.null(eval)) {
df2 <- as.data.frame(summary(df))
} else {
df2 <- as.data.frame(summary(df), evaluation_date = eval)
}
df2
}
testing(losses_ldf, eval = "2012-06-30")
eval = "2012-06-30"
is.null(eval)
eval
summary(losses_ldf, evaluation_date = 2012-06-30)
summary(losses_ldf, evaluation_date = "2012-06-30")
load_all("reserve")
plot(losses_ldf, evaluation_date = "2012-06-30")
plot(losses_ldf, evaluation_date = "2011-06-30")
plot(losses_ldf, evaluation_date = "2013-06-30")
library(reserve)
?loss_df
document("reserve")
library("rpxygen2")
library("roxygen2")
library("roxygen2")
install.packages("roxygen2")
library("roxygen2")
documnet("reserve")
document("reserve")
upgradeRoxygen('/Users/katie/Google Drive/R Projects/reserve')
document("reserve")
library(reserve)
?loss_df
getwd()
setwd("C:/Users/Andy/Google Drive/R Projects")
librar(devtools)
library(devtools)
load_all("reserve")
data(losses)
data(losses_ldf)
library(ChainLadder)
install.packages("ChainLadder")
sum_type(losses_ldf, "paid")
